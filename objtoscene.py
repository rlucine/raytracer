''' Script to convert .obj files to .scene files
    Data may be discarded!
'''

# Standard library
from sys import argv
from os.path import *

#===============================================================
# Conversion script
#===============================================================
def convert(src, dst):
    ''' Convert the object to a scene file '''
    # Input file
    try:
        input = open(src, "r")
    except:
        print("Error opening %s\n" % src)
        return False
    
    # Output file
    try:
        output = open(dst, "w")
    except:
        print("Error opening %s\n" % src)
        return False
    
    # Get the scene header
    output.write("# Generated by %s from %s\n" % (basename(argv[0]), basename(src)))
    output.write("eye 0 0 200\n")
    output.write("viewdir 0 0 -1\n")
    output.write("updir 0 1 0\n")
    output.write("fovv 60\n")
    output.write("imsize 100 100\n")
    output.write("bkgcolor 0 0 0\n\n")
    
    # Get the lighting
    output.write("light 0 -1 0 0 1 1 1\n")
    output.write("mtlcolor 0 0.5 0.5 1 1 1 0.2 0.4 0.4 20\n\n")

    # Get all the lines of data
    for line in input:
        if line:
            if line[0] in ("v", "vn", "vt"):
                output.write(line)
            elif line[0] == "f":
                # Discovered a face - need to split down to triangles!
                first, *rest = line[1:].split()
                iterator = iter(rest)
                second = next(iterator)
                for third in iterator:
                    output.write("f %s %s %s\n" % (first, second, third))
                    second = third
    output.write("\n")
    return True

#===============================================================
# Help messages
#===============================================================
def print_help():
    ''' Print the help screen '''
    print("Usage: python %s input.obj [output.scene]" % argv[0])
    print(" input.obj is any file in the obj format.")
    print(" output.scene is optional. If not specified,")
    print(" the default is \"input.scene\". The file")
    print(" will be overwritten with the new data.")

#===============================================================
# Driver
#===============================================================
if __name__ == "__main__":
    
    # Usage: python objtoscene.py whatever.obj [whatever.scene]
    argc = len(argv)
    
    # Unpacking arguments
    if argc == 2:
        src = argv[1]
        dst = splitext(src)[0] + ".scene"
    elif argc == 3:
        src = argv[1]
        dst = argv[2]
    else:
        print_help()
        exit(-1)
    
    # Help messages?
    if src in ("-h", "--help", "-v", "--version"):
        print_help()
        exit(0)
    
    if convert(src, dst):
        print("Success!")
        exit(0)
    print("Failure.")
    exit(-1)
